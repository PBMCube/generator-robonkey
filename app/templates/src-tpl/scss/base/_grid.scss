<% if(includeSusy){ %>
// Documentation:
// http://susydocs.oddbird.net/en/latest/
$susy: (
  columns: 12,
  gutters: 1/4,
  math: fluid,
  output: float,
  gutter-position: inside,
);

$shorthand: 12 1/4 fluid float inside;
<% } %><% if(includeJeetSCSS){ %>
// Documentation:
// http://jeet.gs/
<% } %><% if(includeNeat){ %>
// Documentation:
// https://thoughtbot.github.io/neat-docs/latest/
<% } %><% if(includeGridle || includeGFlex){ %>// @include gridle_setup( {settings} );
// default settings
// $settings : (
//     context : 12,
//     column-width : null,
//     gutter-width : 20px,
//     gutter-height : 0,
//     gutter-top    : 0,
//     gutter-bottom : 0,
//     gutter-left   : 10px,
//     gutter-right  : 10px,
//     direction : ltr,
//     dir-attribute : false,
//     states-classes : false,
//     name-multiplicator : 1,
//     classes-prefix : ''
// );
// @include gridle_setup($settings);

// You need to specify only the settings that you want to override

// Make sure that your states do not have the same name as a gridle option like gutter-width...

// Init your grid
// If you use the grid with the gridle_generate_classes mixin only, this is not for you. When you use gridle with the mixins, you have to init it in order to avoid some potential issues with libsass (sorry it's not me who's in charge of this project...). To do that, it's really simple. You have to call the gridle_init() mixin AFTER the section where you have all your gridle setup kind of mixins (this includes gridle_setup, gridle_register_states, etc...) and BEFORE you call any gridle mixins that generate css output like gridle, gridle_container, etc...

// your gridle setup section :
// @include gridle_setup(());
// @include gridle_register_state(mobile, ...);
// @include gridle_register_state(tablet, ...);
// @include gridle_extend_base_class(...);
// @include gridle_apply_css_for(...);

// init the grid here!
// @include gridle_init();<% } %><
